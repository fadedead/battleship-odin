(()=>{var t={426:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),s=n(645),a=n.n(s)()(r());a.push([t.id,"* {\n\tmargin: 0;\n}\n\n#content {\n\theight: 100vh;\n\twidth: 100vw;\n}\n\n.setup-div {\n\theight: 100vh;\n\twidth: 100vw;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.setup-container {\n\theight: 60vh;\n\twidth: 90vw;\n\n\tfont-size: 1.3rem;\n\n\tdisplay: flex;\n\tgap: 2rem;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.board {\n\theight: 80%;\n\twidth: 35%;\n\n\tdisplay: grid;\n\tgrid-template-rows: repeat(10, 1fr);\n\tgrid-template-columns: repeat(10, 1fr);\n}\n\n.ships-div {\n\theight: 80%;\n\twidth: 30%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tborder: 1px solid black;\n}\n\n.cell {\n\tfont-size: 1.3rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 1px solid black;\n}\n\n.buttons-container {\n\theight: 5vh;\n\twidth: 90vw;\n\n\tdisplay: flex;\n\tgap: 5rem;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.setup-button {\n\theight: 1.5rem;\n\twidth: 5rem;\n}\n\n.gameboard-container {\n\theight: 60vh;\n\twidth: 90vw;\n\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;CACC,SAAS;AACV;;AAEA;CACC,aAAa;CACb,YAAY;AACb;;AAEA;CACC,aAAa;CACb,YAAY;;CAEZ,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;AACxB;;AAEA;CACC,YAAY;CACZ,WAAW;;CAEX,iBAAiB;;CAEjB,aAAa;CACb,SAAS;CACT,mBAAmB;CACnB,uBAAuB;AACxB;;AAEA;CACC,WAAW;CACX,UAAU;;CAEV,aAAa;CACb,mCAAmC;CACnC,sCAAsC;AACvC;;AAEA;CACC,WAAW;CACX,UAAU;;CAEV,aAAa;CACb,mBAAmB;CACnB,uBAAuB;;CAEvB,uBAAuB;AACxB;;AAEA;CACC,iBAAiB;CACjB,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,uBAAuB;AACxB;;AAEA;CACC,WAAW;CACX,WAAW;;CAEX,aAAa;CACb,SAAS;CACT,uBAAuB;CACvB,mBAAmB;AACpB;;AAEA;CACC,cAAc;CACd,WAAW;AACZ;;AAEA;CACC,YAAY;CACZ,WAAW;;CAEX,aAAa;CACb,6BAA6B;CAC7B,mBAAmB;AACpB",sourcesContent:["* {\n\tmargin: 0;\n}\n\n#content {\n\theight: 100vh;\n\twidth: 100vw;\n}\n\n.setup-div {\n\theight: 100vh;\n\twidth: 100vw;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.setup-container {\n\theight: 60vh;\n\twidth: 90vw;\n\n\tfont-size: 1.3rem;\n\n\tdisplay: flex;\n\tgap: 2rem;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.board {\n\theight: 80%;\n\twidth: 35%;\n\n\tdisplay: grid;\n\tgrid-template-rows: repeat(10, 1fr);\n\tgrid-template-columns: repeat(10, 1fr);\n}\n\n.ships-div {\n\theight: 80%;\n\twidth: 30%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tborder: 1px solid black;\n}\n\n.cell {\n\tfont-size: 1.3rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 1px solid black;\n}\n\n.buttons-container {\n\theight: 5vh;\n\twidth: 90vw;\n\n\tdisplay: flex;\n\tgap: 5rem;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.setup-button {\n\theight: 1.5rem;\n\twidth: 5rem;\n}\n\n.gameboard-container {\n\theight: 60vh;\n\twidth: 90vw;\n\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n}\n"],sourceRoot:""}]);const i=a},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,s){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&a[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),s="/*# ".concat(r," */");return[e].concat([s]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var s={},a=[],i=0;i<t.length;i++){var c=t[i],l=o.base?c[0]+o.base:c[0],d=s[l]||0,p="".concat(l," ").concat(d);s[l]=d+1;var u=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var A=r(h,o);o.byIndex=i,e.splice(i,0,{identifier:p,updater:A,references:1})}a.push(p)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var s=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<s.length;a++){var i=n(s[a]);e[i].references--}for(var c=o(t,r),l=0;l<s.length;l++){var d=n(s[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}s=c}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},182:t=>{t.exports={shipsAvailable:{4:2,3:3,2:3}}},417:(t,e,n)=>{const{gameFinished:o,updatePlayerAndComputerBoards:r,updatePlayerBoards:s}=n(593),{generateRandomShipPlacements:a}=n(236),{Player:i}=n(507);t.exports={Game:class{constructor(){this.playerOne=new i,this.playerTwo=new i,this.playerOne.setOpponent(this.playerTwo),this.playerTwo.setOpponent(this.playerOne)}startGameVsComputer(t){for(let e of t){const[t,n,o,r]=[...e];this.playerOne.gameboard.placeShip([t,n],o,r)}for(let t of a()){const[e,n,o,r]=[...t];this.playerTwo.gameboard.placeShip([e,n],o,r)}}playMoveVsComputer(t){this.playerOne.playMove(t),this.playerOne.checkWin()?o("You Win!!"):(this.playerTwo.playRandomMove(),this.playerTwo.checkWin()&&o("Computer Wins!!")),s()}}}},843:(t,e,n)=>{const{shipsAvailable:o}=n(182),{Game:r}=n(417),{showGameVsComputer:s}=n(593),{generateRandomShipPlacements:a}=n(236);function i(){const t=document.createElement("div");t.classList.add("board");const e={...o},n=[],a=[];let i=!0,h=parseInt(Object.keys(e)[0]);for(let o=0;o<10;o++){const A=[];for(let m=0;m<10;m++){const f=document.createElement("div");f.classList.add("cell"),f.addEventListener("click",(()=>{if(d(o,m,h,i,n,a),h=l(e,h),"END"===h){const t=new r;t.startGameVsComputer(a),s(t,a)}})),f.addEventListener("contextmenu",(t=>{t.preventDefault(),i=!i,c(n)})),f.addEventListener("mouseover",(()=>{p(o,m,h,i,n)})),f.addEventListener("mouseleave",(()=>{u(o,m,h,i,n)})),A.push(f),t.appendChild(f)}n.push(A)}return t}function c(t){for(let e=0;e<10;e++)for(let n=0;n<10;n++)"black"!==t[e][n].style.backgroundColor&&(t[e][n].style.backgroundColor="white")}function l(t,e){return t[e]-=1,t[e]>0?e:(delete t[e],parseInt(Object.keys(t)[0])||"END")}function d(t,e,n,o,r,s){if("red"===r[t][e].style.backgroundColor||"black"===r[t][e].style.backgroundColor)return;let a="black";if(o){let o=e;for(;o<e+n;)r[t][o].style.backgroundColor=a,o+=1;s.push([t,e,0,n])}else{let o=t;for(;o<t+n;)r[o][e].style.backgroundColor=a,o+=1;s.push([t,e,1,n])}}function p(t,e,n,o,r){let s="green";if(o){e+n>10&&(s="red");let o=e;for(;o<10&&o<e+n;)"black"===r[t][o].style.backgroundColor&&(s="red"),o+=1;for(o=e;o<10&&o<e+n;)"black"!==r[t][o].style.backgroundColor&&(r[t][o].style.backgroundColor=s),o+=1}else{t+n>10&&(s="red");let o=t;for(;o<10&&o<t+n;)"black"===r[o][e].style.backgroundColor&&(s="red"),o+=1;for(o=t;o<10&&o<t+n;)"black"!==r[o][e].style.backgroundColor&&(r[o][e].style.backgroundColor=s),o+=1}}function u(t,e,n,o,r){let s="white";if(o){let o=e;for(;o<10&&o<e+n;)"black"!==r[t][o].style.backgroundColor&&(r[t][o].style.backgroundColor=s),o+=1}else{let o=t;for(;o<10&&o<t+n;)"black"!==r[o][e].style.backgroundColor&&(r[o][e].style.backgroundColor=s),o+=1}}t.exports={getGameSetup:function(t){const e=document.createElement("div");e.classList.add("setup-div");const n=document.createElement("div");n.classList.add("setup-container");const o=i();n.appendChild(o);const c=document.createElement("div");c.classList.add("ships-div");const l=function(){const t=document.createElement("div"),e=document.createElement("p");e.innerText="Click to place the ship",t.appendChild(e);const n=document.createElement("p");return n.innerText="Right click to rotate ship",t.appendChild(n),t}();c.appendChild(l),n.appendChild(c);const d=function(){const t=document.createElement("div");t.classList.add("buttons-container");const e=document.createElement("button");e.innerText="Random",e.classList.add("setup-button"),e.addEventListener("click",(()=>{const t=new r,e=a();t.startGameVsComputer(e),s(t,e)})),t.appendChild(e);const n=document.createElement("button");return n.innerText="Reset",n.classList.add("setup-button"),n.addEventListener("click",(()=>{const t=document.getElementsByClassName("setup-container")[0],e=document.getElementsByClassName("board")[0];t.removeChild(e);const n=i();t.appendChild(n)})),t.appendChild(n),t}();return e.appendChild(n),e.appendChild(d),e}}},593:t=>{let e=null,n=null,o=null;t.exports={showGameVsComputer:function(t,r){e=t;const s=document.getElementById("content"),a=document.getElementsByClassName("setup-div")[0];s.removeChild(a);const i=function(t){const r=document.createElement("div");return r.classList.add("gameboard-container"),n=function(t){const e=document.createElement("div");e.classList.add("board");const n=[];for(let t=0;t<10;t++){const t=[];for(let n=0;n<10;n++){const n=document.createElement("div");n.classList.add("cell"),t.push(n),e.appendChild(n)}n.push(t)}for(let[e,o,r,s]of t)if(s=parseInt(s),0==r){let t=o;for(;t<o+s;)n[e][t].style.backgroundColor="gray",t+=1}else{let t=e;for(;t<e+s;)n[t][o].style.backgroundColor="gray",t+=1}return{board:e,boardArr:n}}(t),o=function(){const t=document.createElement("div");t.classList.add("board");const n=[];for(let o=0;o<10;o++){const r=[];for(let n=0;n<10;n++){const s=document.createElement("div");s.classList.add("cell");const a=()=>{e.playMoveVsComputer([o,n]),s.removeEventListener("click",a)};s.addEventListener("click",a),r.push(s),t.appendChild(s)}n.push(r)}return{board:t,boardArr:n}}(),r.appendChild(n.board),r.appendChild(o.board),r}(r);i.classList.add("game-div"),s.appendChild(i)},gameFinished:function(t){alert(t),location.reload()},updatePlayerBoards:function(){for(let t=0;t<10;t++)for(let r=0;r<10;r++)"MISS"==e.playerOne.gameboard.getCoordsState([t,r])&&(n.boardArr[t][r].innerText="X"),"HIT"==e.playerOne.gameboard.getCoordsState([t,r])&&(n.boardArr[t][r].innerText="H"),"MISS"==e.playerTwo.gameboard.getCoordsState([t,r])&&(o.boardArr[t][r].innerText="X"),"HIT"==e.playerTwo.gameboard.getCoordsState([t,r])&&(o.boardArr[t][r].innerText="H")}}},236:(t,e,n)=>{const{shipsAvailable:o}=n(182);function r(t,e){return Math.floor(Math.random()*(e-t+1))+t}function s(t,e,n,o,r){if(0===n){if(e+o>9)return!0;const n=[];for(let s=e;s<=e+o;s++){let e=""+t+s;if(n.push(e),r.has(e))return!0}for(let t of n)r.add(t);return!1}{if(t+o>9)return!0;const n=[];for(let s=t;s<=t+o;s++){let t=""+s+e;if(n.push(t),r.has(t))return!0}for(let t of n)r.add(t);return!1}}t.exports={getRandomInt:r,generateRandomShipPlacements:function(){const t={...o},e=new Set,n=[];for(let[o,a]of Object.entries(t)){o=parseInt(o);for(let t=0;t<a;t++){let t=r(0,9),a=r(0,9),i=r(0,1);for(;s(t,a,i,o,e);)t=r(0,9),a=r(0,9),i=r(0,1);n.push([t,a,i,o])}}return n}}},498:(t,e,n)=>{const{Ship:o}=n(643);t.exports={Gameboard:class{#t=new Array(10);constructor(){this.board=new Array(10);for(let t=0;t<10;t++)this.board[t]=new Array(10).fill("NONE");for(let t=0;t<10;t++)this.#t[t]=new Array(10).fill(null);this.totalShips=0,this.totalShipsSunk=0}placeShip(t,e,n){const[r,s]=t,a=new o(n);if(0==e)for(let t=s;t<s+n;t++)this.board[r][t]="SHIP",this.#t[r][t]=a;else for(let t=r;t<r+n;t++)this.board[t][s]="SHIP",this.#t[t][s]=a;this.totalShips+=1}getCoordsState(t){const[e,n]=t;return this.board[e][n]}receiveAttack(t){const[e,n]=t;"SHIP"==this.board[e][n]?(this.#t[e][n].tookHit(),this.#t[e][n].isSunk()&&(this.totalShipsSunk+=1),this.board[e][n]="HIT"):this.board[e][n]="MISS"}checkIsGameOver(){return this.totalShipsSunk==this.totalShips}}}},507:(t,e,n)=>{const{getRandomInt:o}=n(236),{Gameboard:r}=n(498);t.exports={Player:class{constructor(){this.gameboard=new r,this.opponentBoard=null,this.movesPlayed=new Set}setOpponent(t){this.opponentBoard=t.gameboard}playMove(t){if(null==this.opponentBoard)throw new Error("Opponent not set for player");const[e,n]=[...t];this.movesPlayed.add(`${e}${n}`),this.opponentBoard.receiveAttack(t)}playRandomMove(){if(null==this.opponentBoard)throw new Error("Opponent not set for player");let t=o(0,9),e=o(0,9);for(;this.movesPlayed.has(`${t}${e}`);)t=o(0,9),e=o(0,9);this.movesPlayed.add(`${t}${e}`),this.playMove([t,e])}checkWin(){if(null==this.opponentBoard)throw new Error("Opponent not set for player");return this.opponentBoard.checkIsGameOver()}}}},643:t=>{t.exports={Ship:class{constructor(t){this.length=t,this.timesHit=0}tookHit=()=>this.timesHit+=1;isSunk=()=>this.timesHit==this.length}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var s=e[o]={id:o,exports:{}};return t[o](s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(379),e=n.n(t),o=n(795),r=n.n(o),s=n(569),a=n.n(s),i=n(565),c=n.n(i),l=n(216),d=n.n(l),p=n(589),u=n.n(p),h=n(426),A={};A.styleTagTransform=u(),A.setAttributes=c(),A.insert=a().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=d(),e()(h.Z,A),h.Z&&h.Z.locals&&h.Z.locals;const{getGameSetup:m}=n(843);!function(){const t=document.getElementById("content"),e=m();t.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,